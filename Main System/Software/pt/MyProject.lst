;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 13/06/2021 15:23:21
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0xF000EF16  	GOTO        44
_interrupt:
;MyProject.c,48 :: 		void interrupt()
;MyProject.c,52 :: 		if(TMR0IF_bit)                                                            //Houve overflow do Timer0?
0x0008	0xA4F2      	BTFSS       TMR0IF_bit, BitPos(TMR0IF_bit+0) 
0x000A	0xD007      	BRA         L_interrupt0
;MyProject.c,54 :: 		TMR0IF_bit = 0x00;                                                     //Limpa Flag
0x000C	0x94F2      	BCF         TMR0IF_bit, BitPos(TMR0IF_bit+0) 
;MyProject.c,56 :: 		TMR0L      = byteH;                                                    //Reinicia byte menos sifnificativo do Timer0
0x000E	0xFFD6C016  	MOVFF       _byteH, TMR0L
;MyProject.c,57 :: 		TMR0H      = byteL;                                                    //Reinicia byte mais significativo do Timer0
0x0012	0xFFD7C015  	MOVFF       _byteL, TMR0H
;MyProject.c,59 :: 		vel1       = ~vel1;                                                    //Gera clock para velocidade do motor1
0x0016	0x7C8C      	BTG         LATD6_bit, BitPos(LATD6_bit+0) 
;MyProject.c,60 :: 		vel2       = ~vel2;                                                    //Gera clock para velocidade do motor2
0x0018	0x7E8C      	BTG         LATD7_bit, BitPos(LATD7_bit+0) 
;MyProject.c,69 :: 		} //end if TMR0IF
L_interrupt0:
;MyProject.c,70 :: 		} //end interrupt
L_end_interrupt:
L__interrupt4:
0x001A	0x0011      	RETFIE      1
; end of _interrupt
___CC2DW:
;__Lib_System.c,21 :: 		
;__Lib_System.c,23 :: 		
_CC2DL_Loop1:
;__Lib_System.c,24 :: 		
0x001C	0x0009      	TBLRD*+
;__Lib_System.c,25 :: 		
0x001E	0xFFE6CFF5  	MOVFF       TABLAT, POSTINC1
;__Lib_System.c,26 :: 		
0x0022	0x0600      	DECF        R0, 1, 0
;__Lib_System.c,27 :: 		
0x0024	0xE1FB      	BNZ         _CC2DL_Loop1
;__Lib_System.c,28 :: 		
0x0026	0x0601      	DECF        R1, 1, 0
;__Lib_System.c,29 :: 		
0x0028	0xE1F9      	BNZ         _CC2DL_Loop1
;__Lib_System.c,31 :: 		
L_end___CC2DW:
0x002A	0x0012      	RETURN      0
; end of ___CC2DW
_main:
0x002C	0x0E48      	MOVLW       72
0x002E	0x6E15      	MOVWF       _byteL 
0x0030	0x0E77      	MOVLW       119
0x0032	0x6E16      	MOVWF       _byteH 
;MyProject.c,74 :: 		void main()
;MyProject.c,77 :: 		INTCON        = 0xA0;                                                      //Habilita interrupção global e interrupção do Timer0
0x0034	0x0EA0      	MOVLW       160
0x0036	0x6EF2      	MOVWF       INTCON 
;MyProject.c,81 :: 		TMR0ON_bit       = 0x01;                                                   //bit 7: liga o Timer0
0x0038	0x8ED5      	BSF         TMR0ON_bit, BitPos(TMR0ON_bit+0) 
;MyProject.c,82 :: 		T08BIT_bit       = 0x00;                                                   //bit 6: habilita o modo de 16 bits para o Timer0
0x003A	0x9CD5      	BCF         T08BIT_bit, BitPos(T08BIT_bit+0) 
;MyProject.c,83 :: 		T0CS_bit         = 0x00;                                                   //bit 5: timer0 incrementa com o ciclo de máquina
0x003C	0x9AD5      	BCF         T0CS_bit, BitPos(T0CS_bit+0) 
;MyProject.c,84 :: 		PSA_bit          = 0x01;                                                   //bit 3: timer0 sem prescaler (1:1)
0x003E	0x86D5      	BSF         PSA_bit, BitPos(PSA_bit+0) 
;MyProject.c,90 :: 		TMR0L    = 0x48;                                                           //byte menos significativo      0x48
0x0040	0x0E48      	MOVLW       72
0x0042	0x6ED6      	MOVWF       TMR0L 
;MyProject.c,91 :: 		TMR0H    = 0x77;                                                           //byte mais significativo       0x77
0x0044	0x0E77      	MOVLW       119
0x0046	0x6ED7      	MOVWF       TMR0H 
;MyProject.c,94 :: 		TRISA    = 0xFF;
0x0048	0x0EFF      	MOVLW       255
0x004A	0x6E92      	MOVWF       TRISA 
;MyProject.c,95 :: 		ADCON0   = 0x01;                                                           //Ligar o conversor A/C
0x004C	0x0E01      	MOVLW       1
0x004E	0x6EC2      	MOVWF       ADCON0 
;MyProject.c,96 :: 		ADCON1   = 0x0E;                                                           //Apenas o AN0 como analógico
0x0050	0x0E0E      	MOVLW       14
0x0052	0x6EC1      	MOVWF       ADCON1 
;MyProject.c,97 :: 		ADCON2   = 0x18;
0x0054	0x0E18      	MOVLW       24
0x0056	0x6EC0      	MOVWF       ADCON2 
;MyProject.c,111 :: 		TRISB   = 0xC0;                                                            //Configura IOs no PORTB
0x0058	0x0EC0      	MOVLW       192
0x005A	0x6E93      	MOVWF       TRISB 
;MyProject.c,112 :: 		PORTB   = 0xC0;                                                            //Inicializa PORTB
0x005C	0x0EC0      	MOVLW       192
0x005E	0x6E81      	MOVWF       PORTB 
;MyProject.c,113 :: 		TRISD   = 0x3C;                                                            //Configura IOs no PORTD
0x0060	0x0E3C      	MOVLW       60
0x0062	0x6E95      	MOVWF       TRISD 
;MyProject.c,114 :: 		PORTD   = 0x3C;                                                            //Inicializa PORTD
0x0064	0x0E3C      	MOVLW       60
0x0066	0x6E83      	MOVWF       PORTD 
;MyProject.c,115 :: 		ADCON1  = 0x0F;                                                            //Configura os pinos do PORTB como digitais
0x0068	0x0E0F      	MOVLW       15
0x006A	0x6EC1      	MOVWF       ADCON1 
;MyProject.c,117 :: 		byteH  = 0x93;                                                            //90Hz
0x006C	0x0E93      	MOVLW       147
0x006E	0x6E16      	MOVWF       _byteH 
;MyProject.c,118 :: 		byteL  = 0x9A;
0x0070	0x0E9A      	MOVLW       154
0x0072	0x6E15      	MOVWF       _byteL 
;MyProject.c,134 :: 		dir1 = 0x00;                                                              //Define o bit de direção inicial
0x0074	0x908C      	BCF         LATD0_bit, BitPos(LATD0_bit+0) 
;MyProject.c,135 :: 		dir2 = 0x01;                                                              //Define o bit de direção inicial
0x0076	0x828C      	BSF         LATD1_bit, BitPos(LATD1_bit+0) 
;MyProject.c,143 :: 		while(1)
L_main1:
;MyProject.c,183 :: 		} //end while
0x0078	0xD7FF      	BRA         L_main1
;MyProject.c,184 :: 		} //end main
L_end_main:
0x007A	0xD7FF      	BRA         $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0008      [20]    _interrupt
0x001C      [16]    ___CC2DW
0x002C      [80]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    R0
0x0001       [1]    R1
0x0002       [1]    R2
0x0003       [1]    R3
0x0004       [1]    R4
0x0005       [1]    R5
0x0006       [1]    R6
0x0007       [1]    R7
0x0008       [1]    R8
0x0009       [1]    R9
0x000A       [1]    R10
0x000B       [1]    R11
0x000C       [1]    R12
0x000D       [1]    R13
0x000E       [1]    R14
0x000F       [1]    R15
0x0010       [1]    R16
0x0011       [1]    R17
0x0012       [1]    R18
0x0013       [1]    R19
0x0014       [1]    R20
0x0015       [1]    _byteL
0x0016       [1]    _byteH
0x0F81       [0]    RB4_bit
0x0F81       [1]    PORTB
0x0F81       [0]    RB5_bit
0x0F81       [0]    RB3_bit
0x0F81       [0]    RB0_bit
0x0F81       [0]    RB1_bit
0x0F81       [0]    RB2_bit
0x0F83       [1]    PORTD
0x0F8C       [0]    LATD1_bit
0x0F8C       [0]    LATD0_bit
0x0F8C       [0]    LATD6_bit
0x0F8C       [0]    LATD7_bit
0x0F92       [1]    TRISA
0x0F93       [0]    TRISB0_bit
0x0F93       [0]    TRISB1_bit
0x0F93       [0]    TRISB5_bit
0x0F93       [1]    TRISB
0x0F93       [0]    TRISB3_bit
0x0F93       [0]    TRISB4_bit
0x0F93       [0]    TRISB2_bit
0x0F95       [1]    TRISD
0x0FC0       [1]    ADCON2
0x0FC1       [1]    ADCON1
0x0FC2       [1]    ADCON0
0x0FD5       [0]    T0CS_bit
0x0FD5       [0]    PSA_bit
0x0FD5       [0]    TMR0ON_bit
0x0FD5       [0]    T08BIT_bit
0x0FD6       [1]    TMR0L
0x0FD7       [1]    TMR0H
0x0FD8       [1]    STATUS
0x0FD9       [1]    FSR2L
0x0FDA       [1]    FSR2H
0x0FDE       [1]    POSTINC2
0x0FE0       [1]    BSR
0x0FE1       [1]    FSR1L
0x0FE2       [1]    FSR1H
0x0FE4       [1]    PREINC1
0x0FE6       [1]    POSTINC1
0x0FE7       [1]    INDF1
0x0FE8       [1]    WREG
0x0FE9       [1]    FSR0L
0x0FEA       [1]    FSR0H
0x0FEE       [1]    POSTINC0
0x0FF2       [1]    INTCON
0x0FF2       [0]    TMR0IF_bit
0x0FF3       [1]    PRODL
0x0FF4       [1]    PRODH
0x0FF5       [1]    TABLAT
0x0FF6       [1]    TBLPTRL
0x0FF7       [1]    TBLPTRH
0x0FF8       [1]    TBLPTRU
